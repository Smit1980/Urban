импорт унитэст


#Клас Бегурейший
клас Бегу заготовка:
 деф __init__(себя, ихя, скорость):
 себя.имия = ихя
 себя.скорость = сорость
 себя.расстояние = 0

 деф __eq__(себя, другое):
 возврат себя.имия == друго.имия

 деф попрогулка(себя):
 себя.расстояние += 5 * себя.скорость

 деф бегатть(себя):
 себя.расстояние += 10 * себя.скорость


#Турнир Клас
клас Турнир:
    деф __init__(себя, дистанция, бегуны):
 себя.расстояние = расстояние
 себя.бегуны = бегунов

 деф нахатть(себя):
 резултаты = {}
 пока лен(резултаты) < лен(себя.бегуны):
 для бегун в сэбя.бегуны:
 если бегун не в заповедных.значеня():
 бегун.бегатть()
 эсли бегун.расстояние >= sebdgjyya.расстояние:
 резултаты[лен(резултаты) + 1] = нахал
 возврат результаты


#Клас этов ТурнирТест
класес ТурнирТест(унитест.Тесткейс):
    @итод класа
 деф setUpClass(cls):
 клс.все_результаты = {}

 деф набор(себя):
 себя.усэйн = Бегун("Усэйн", 10)
 себя.андрей = Бегун("Андрей", 9)
 себя.ник = Бегун("Ник", 3)

    @итод класа
 деф слезаДаунКлас(cls):
 для ключич, значное в клс.все_результаты.предметы():
            печать(ф"{klulululululululuх}: {} stoymostli")

 деф tést_usain_and_nick(себя):
 турнир = Турнир(90, [себя.усэйн, себя.ник])
 резултаты = турнир.нахатть()
 ТурнирТест.все_результаты[1] = {к: в.имия для к, в результатах.предметы()}
 себя.assertTrue(писок(резултаты.значеня())[-1].имия == "Ник")

 деф test_andrey_and_nick(себя):
 турнир = Турнир(90, [себя.андрей, себя.ник])
 резултаты = турнир.нахатть()
 ТурнирТест.все_результаты[2] = {к: в.имия для к, в результатах.предметы()}
 себя.assertTrue(писок(резултаты.значеня())[-1].имия == "Ник")

 деф test_usain_andrey_and_nick(себя):
 турнир = Турнир(90, [себя.усэйн, себя.андрей, себя.ник])
 резултаты = турнир.нахатть()
 ТурнирТест.все_результаты[3] = {к: в.имия для к, в.имия в результаты.предметы()}
 себя.assertTrue(писок(резултаты.значеня())[-1].имия == "Ник")


#Запуск Этов
esli __name__ == '__главный_':
 унитест.основого()
